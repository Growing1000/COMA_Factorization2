{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "E:\\Y3_liverpool\\FYP\\codes\\new\\pymarl\\src",
    "dependencies": [
      "numpy==1.24.3",
      "sacred==0.8.4",
      "torch==2.1.0"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "c971afdceb34635d31b778021b0ef90d7af51e86",
        "dirty": true,
        "url": "https://github.com/oxwhirl/pymarl"
      },
      {
        "commit": "c971afdceb34635d31b778021b0ef90d7af51e86",
        "dirty": true,
        "url": "https://github.com/oxwhirl/pymarl"
      },
      {
        "commit": "c971afdceb34635d31b778021b0ef90d7af51e86",
        "dirty": true,
        "url": "https://github.com/oxwhirl/pymarl"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources\\main_094bb36048d071759eecaf03aa0b4b55.py"
      ],
      [
        "run.py",
        "_sources\\run_b0aaad29119fb7a2d25dd2f9c859d27e.py"
      ],
      [
        "utils\\logging.py",
        "_sources\\logging_b0277773964fc75c1060bdfa73d23ffb.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"D:\\miniconda_download\\miniconda3\\envs\\pymarl2\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 35, in my_main\n    run(_run, config, _log)\n",
    "  File \"E:\\Y3_liverpool\\FYP\\codes\\new\\pymarl\\src\\run.py\", line 48, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"E:\\Y3_liverpool\\FYP\\codes\\new\\pymarl\\src\\run.py\", line 179, in run_sequential\n    learner.train(episode_sample, runner.t_env, episode)\n",
    "  File \"E:\\Y3_liverpool\\FYP\\codes\\new\\pymarl\\src\\learners\\comafac_learner.py\", line 76, in train\n    q_vals, critic_train_stats = self._train_critic(batch, rewards, terminated, actions, avail_actions,\n",
    "  File \"E:\\Y3_liverpool\\FYP\\codes\\new\\pymarl\\src\\learners\\comafac_learner.py\", line 159, in _train_critic\n    q_taken = self.mixer(q_taken, batch[\"state\"][:,:-1])\n",
    "  File \"D:\\miniconda_download\\miniconda3\\envs\\pymarl2\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 1518, in _wrapped_call_impl\n    return self._call_impl(*args, **kwargs)\n",
    "  File \"D:\\miniconda_download\\miniconda3\\envs\\pymarl2\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 1527, in _call_impl\n    return forward_call(*args, **kwargs)\n",
    "  File \"E:\\Y3_liverpool\\FYP\\codes\\new\\pymarl\\src\\modules\\mixers\\qmix.py\", line 68, in forward\n    hidden = F.elu(th.bmm(agent_qs, w1) + b1)\n",
    "RuntimeError: Expected size for first two dimensions of batch2 tensor to be: [8, 5] but got: [440, 5].\n"
  ],
  "heartbeat": "2024-04-25T17:49:18.610866",
  "host": {
    "ENV": {},
    "cpu": "AMD Ryzen 7 4800U with Radeon Graphics",
    "hostname": "LAPTOP-IG6RHDOS",
    "os": [
      "Windows",
      "Windows-10-10.0.22631-SP0"
    ],
    "python_version": "3.8.19"
  },
  "meta": {
    "command": "my_main",
    "config_updates": {
      "env_args": {
        "map_name": "2s3z"
      }
    },
    "named_configs": [],
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--id": null,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.map_name=2s3z"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2024-04-25T17:48:41.017701",
  "status": "FAILED",
  "stop_time": "2024-04-25T17:49:18.620714"
}