[INFO 05:34:20] pymarl Running command 'my_main'
[INFO 05:34:20] pymarl Started run with ID "2"
[DEBUG 05:34:20] pymarl Starting Heartbeat
[DEBUG 05:34:20] my_main Started
[INFO 05:34:20] my_main Experiment Parameters:
[INFO 05:34:20] my_main 

{   'action_selector': 'epsilon_greedy',
    'agent': 'n_rnn',
    'agent_output_type': 'q',
    'batch_size': 128,
    'batch_size_run': 8,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'critic_lr': 0.0005,
    'env': 'stag_hunt',
    'env_args': {   'agent_move_block': [   0,
                                            1,
                                            2],
                    'agent_obs': [   2,
                                     2],
                    'capture_action': True,
                    'capture_action_conditions': [   2,
                                                     1],
                    'capture_conditions': [   0,
                                              1],
                    'capture_freezes': True,
                    'capture_terminal': False,
                    'directed_cone_narrow': True,
                    'directed_exta_actions': True,
                    'directed_observations': False,
                    'episode_limit': 200,
                    'intersection_global_view': False,
                    'intersection_unknown': False,
                    'map_name': 'stag_hunt',
                    'miscapture_punishment': 0,
                    'mountain_agent_row': -1,
                    'mountain_slope': 0.0,
                    'mountain_spawn': False,
                    'n_agents': 8,
                    'n_hare': 0,
                    'n_stags': 8,
                    'observe_ids': False,
                    'observe_one_hot': False,
                    'observe_state': False,
                    'observe_walls': False,
                    'p_hare_rest': 0.0,
                    'p_stags_rest': 0.0,
                    'prevent_cannibalism': True,
                    'print_caught_prey': False,
                    'print_frozen_agents': False,
                    'random_ghosts': False,
                    'random_ghosts_indicator': False,
                    'random_ghosts_mul': -1,
                    'random_ghosts_prob': 0.5,
                    'remove_frozen': True,
                    'reward_collision': 0,
                    'reward_hare': 1,
                    'reward_stag': 10,
                    'reward_time': 0,
                    'seed': 698563947,
                    'state_as_graph': False,
                    'toroidal': False,
                    'world_shape': [   10,
                                       10]},
    'epsilon_anneal_time': 100000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hypernet_embed': 64,
    'label': 'default_label',
    'learner': 'nq_learner',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 10000,
    'lr': 0.001,
    'mac': 'n_mac',
    'mixer': 'vdn',
    'mixing_embed_dim': 32,
    'name': 'vdn_env=8_adam_td_lambda',
    'obs_agent_id': False,
    'obs_last_action': True,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'optimizer': 'adam',
    'q_lambda': False,
    'repeat_id': 1,
    'rnn_hidden_dim': 64,
    'run': 'default',
    'runner': 'parallel',
    'runner_log_interval': 10000,
    'save_model': False,
    'save_model_interval': 2000000,
    'save_replay': False,
    'seed': 698563947,
    't_max': 10050000,
    'target_update_interval': 200,
    'td_lambda': 0.6,
    'test_greedy': True,
    'test_interval': 10000,
    'test_nepisode': 16,
    'use_cuda': True,
    'use_tensorboard': False}

Mixer Size: 
0.0K
[INFO 05:34:25] my_main Beginning training for 10050000 timesteps
/users/sgzliu45/Codes/pymarl2/src/components/episode_buffer.py:103: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:275.)
  v = th.tensor(v, dtype=dtype, device=self.device)
/users/sgzliu45/Codes/pymarl2/src/components/episode_buffer.py:103: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
[INFO 05:34:29] my_main t_env: 1600 / 10050000
[INFO 05:34:29] my_main Estimated time left: 1 hours, 53 seconds. Time passed: 4 seconds
[INFO 05:35:00] my_main Recent Stats | t_env:      11200 | Episode:       56
ep_length_mean:          200.0000	episode_limit_mean:        1.0000	epsilon:                   1.0000	return_mean:               2.5000
return_std:                4.3301	test_ep_length_mean:     200.0000	test_episode_limit_mean:   1.0000	test_return_mean:          0.0000
test_return_std:           0.0000	
